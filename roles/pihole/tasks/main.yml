---
# https://github.com/pi-hole/docker-pi-hole#installing-on-ubuntu
# Modern releases of Ubuntu (17.10+) include systemd-resolved which 
# is configured by default to implement a caching DNS stub resolver. 
# This will prevent pi-hole from listening on port 53. 
# The stub resolver should be disabled with: 
# sudo sed -r -i.orig 's/#?DNSStubListener=yes/DNSStubListener=no/g' /etc/systemd/resolved.conf
- name: Disable stub resolver in systemd/resolved.conf when OS is Ubuntu 17+
  lineinfile:
    state: present
    path: /etc/systemd/resolved.conf
    regexp: '^#?DNSStubListener=yes'
    line: DNSStubListener=no
  when:  (ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] >= "17")

# This will not change the nameserver settings,
# which point to the stub resolver thus preventing DNS resolution. 
# Change the /etc/resolv.conf symlink to point to /run/systemd/resolve/resolv.conf 
# which is automatically updated to follow the system's netplan: 
# sudo sh -c 'rm /etc/resolv.conf && ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf' 
- name: Change the /etc/resolv.conf symlink to point to /run/systemd/resolve/resolv.conf
  file:
    path: /etc/resolv.conf
    state: link
    # originally: /run/systemd/resolve/stub-resolv.conf
    src: /run/systemd/resolve/resolv.conf
  when:  (ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] >= "17")

# After making these changes, you should restart systemd-resolved using systemctl restart systemd-resolved
- name: Restart systemd-resolved 
  systemd:
    name: systemd-resolved
    state: restarted
  when:  (ansible_facts['distribution'] == "Ubuntu" and ansible_facts['distribution_major_version'] >= "17")

- name: Create pihole namespace
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: pihole

- name: Create ConfigMap for PiHole Adlists
  k8s:
    state: absent
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: pihole-adlists
        namespace: pihole
      data:
        # adlists.list: |
        #   http://sysctl.org/cameleon/hosts
        #   https://s3.amazonaws.com/lists.disconnect.me/simple_tracking.txt
        #   https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt
        #   https://hosts-file.net/ad_servers.txt
        adlists.list: |
          https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts
          https://mirror1.malwaredomains.com/files/justdomains
          http://sysctl.org/cameleon/hosts
          https://s3.amazonaws.com/lists.disconnect.me/simple_tracking.txt
          https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt
          https://hosts-file.net/ad_servers.txt
          
- name: Create ConfigMap for PiHole Regexs
  k8s:
    state: absent
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: pihole-regex
        namespace: pihole
      data:
        regex.list: |
          ^(.+[-_.])??adse?rv(er?|ice)?s?[0-9]*[-.]
          ^(.+[-_.])??m?ad[sxv]?[0-9]*[-_.]
          ^(.+[-_.])??telemetry[-.]
          ^(.+[-_.])??xn--
          ^adim(age|g)s?[0-9]*[-_.]
          ^adtrack(er|ing)?[0-9]*[-.]
          ^advert(s|is(ing|ements?))?[0-9]*[-_.]
          ^aff(iliat(es?|ion))?[-.]
          ^analytics?[-.]
          ^banners?[-.]
          ^beacons?[0-9]*[-.]
          ^count(ers?)?[0-9]*[-.]
          ^pixels?[-.]
          ^stat(s|istics)?[0-9]*[-.]
          ^track(ers?|ing)?[0-9]*[-.]
          ^traff(ic)?[-.]
          ^(.*)\.g00\.(.*)

# https://apuyou.io/blog/privacy-friendly-vpn-pi-hole-wireguard-kubernetes
- name: Create 1GB Volume for PiHole Data
  community.kubernetes.k8s:
    state: absent
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: pihole-etc-pv-claim
        namespace: pihole
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

- name: Create another 1GB Volume for PiHole Data
  community.kubernetes.k8s:
    state: absent
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: pihole-dnsmasq-pv-claim
        namespace: pihole      
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

- name: Create Deployment for PiHole
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: pihole
        namespace: pihole
        labels:
          app: pihole
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: pihole
        template:
          metadata:
            labels:
              app: pihole
              name: pihole
          spec:
            containers:
              - name: pihole
                image: pihole/pihole:latest
                lifecycle:
                  postStart:
                    exec:
                      command:
                        - sh
                        - "-c"
                        - |
                          /bin/bash <<'EOF'    
                          adlists=(
                            "https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts"
                            "https://mirror1.malwaredomains.com/files/justdomains"
                            "http://sysctl.org/cameleon/hosts"
                            "https://s3.amazonaws.com/lists.disconnect.me/simple_tracking.txt"
                            "https://s3.amazonaws.com/lists.disconnect.me/simple_ad.txt"
                            "https://raw.githubusercontent.com/PolishFiltersTeam/KADhosts/master/KADhosts.txt"
                            "https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.Spam/hosts"
                            "https://v.firebog.net/hosts/static/w3kbl.txt"
                            "https://raw.githubusercontent.com/matomo-org/referrer-spam-blacklist/master/spammers.txt"
                            "https://someonewhocares.org/hosts/zero/hosts"
                            "https://raw.githubusercontent.com/VeleSila/yhosts/master/hosts"
                            "https://winhelp2002.mvps.org/hosts.txt"
                            "https://v.firebog.net/hosts/neohostsbasic.txt"
                            "https://raw.githubusercontent.com/RooneyMcNibNug/pihole-stuff/master/SNAFU.txt"
                            "https://paulgb.github.io/BarbBlock/blacklists/hosts-file.txt"
                            "https://adaway.org/hosts.txt"
                            "https://v.firebog.net/hosts/AdguardDNS.txt"
                            "https://v.firebog.net/hosts/Admiral.txt"
                            "https://raw.githubusercontent.com/anudeepND/blacklist/master/adservers.txt"
                            "https://v.firebog.net/hosts/Easylist.txt"
                            "https://pgl.yoyo.org/adservers/serverlist.php?hostformat=hosts&showintro=0&mimetype=plaintext"
                            "https://raw.githubusercontent.com/FadeMind/hosts.extras/master/UncheckyAds/hosts"
                            "https://raw.githubusercontent.com/bigdargon/hostsVN/master/hosts"
                            "https://raw.githubusercontent.com/jdlingyu/ad-wars/master/hosts"
                            "https://v.firebog.net/hosts/Easyprivacy.txt"
                            "https://v.firebog.net/hosts/Prigent-Ads.txt"
                            "https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.2o7Net/hosts"
                            "https://raw.githubusercontent.com/crazy-max/WindowsSpyBlocker/master/data/hosts/spy.txt"
                            "https://hostfiles.frogeye.fr/firstparty-trackers-hosts.txt"
                            "https://hostfiles.frogeye.fr/multiparty-trackers-hosts.txt"
                            "https://www.github.developerdan.com/hosts/lists/ads-and-tracking-extended.txt"
                            "https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/android-tracking.txt"
                            "https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/SmartTV.txt"
                            "https://raw.githubusercontent.com/Perflyst/PiHoleBlocklist/master/AmazonFireTV.txt"
                            "https://gitlab.com/quidsup/notrack-blocklists/raw/master/notrack-blocklist.txt"
                            "https://raw.githubusercontent.com/DandelionSprout/adfilt/master/Alternate%20versions%20Anti-Malware%20List/AntiMalwareHosts.txt"
                            "https://osint.digitalside.it/Threat-Intel/lists/latestdomains.txt"
                            "https://s3.amazonaws.com/lists.disconnect.me/simple_malvertising.txt"
                            "https://v.firebog.net/hosts/Prigent-Crypto.txt"
                            "https://bitbucket.org/ethanr/dns-blacklists/raw/8575c9f96e5b4a1308f2f12394abd86d0927a4a0/bad_lists/Mandiant_APT1_Report_Appendix_D.txt"
                            "https://phishing.army/download/phishing_army_blocklist_extended.txt"
                            "https://gitlab.com/quidsup/notrack-blocklists/raw/master/notrack-malware.txt"
                            "https://raw.githubusercontent.com/Spam404/lists/master/main-blacklist.txt"
                            "https://raw.githubusercontent.com/FadeMind/hosts.extras/master/add.Risk/hosts"
                            "https://urlhaus.abuse.ch/downloads/hostfile/"
                            "https://v.firebog.net/hosts/Prigent-Malware.txt"
                            "https://v.firebog.net/hosts/Shalla-mal.txt"

                          )
                          regexes=(
                            "^(.+[-_.])??adse?rv(er?|ice)?s?[0-9]*[-.]"
                            "^(.+[-_.])??m?ad[sxv]?[0-9]*[-_.]"
                            "^(.+[-_.])??telemetry[-.]"
                            "^(.+[-_.])??xn--"
                            "^adim(age|g)s?[0-9]*[-_.]"
                            "^adtrack(er|ing)?[0-9]*[-.]"
                            "^advert(s|is(ing|ements?))?[0-9]*[-_.]"
                            "^aff(iliat(es?|ion))?[-.]"
                            "^analytics?[-.]"
                            "^banners?[-.]"
                            "^beacons?[0-9]*[-.]"
                            "^count(ers?)?[0-9]*[-.]"
                            "^pixels?[-.]"
                            "^stat(s|istics)?[0-9]*[-.]"
                            "^track(ers?|ing)?[0-9]*[-.]"
                            "^traff(ic)?[-.]"
                            "^(.*)\.g00\.(.*)"
                          )
                          add_adlist() {
                            local adlist=$1
                            local comment="Adlist added from ansible main.yml"

                            sudo sqlite3 /etc/pihole/gravity.db "INSERT INTO adlist (address, enabled, comment) VALUES ('${adlist}', 1, '${comment}')" || true
                          }
                          add_regex() {
                            local regex=$1
                            pihole --regex "${regex}"
                          }

                          add_all_lists() {
                            for list in "${adlists[@]}"
                            do
                              add_adlist $list
                            done
                          }
                          add_all_regex() {
                            for reg in "${regexes[@]}"
                            do
                              add_regex $reg
                            done
                          }
                          add_all_lists
                          add_all_regex
                          pihole -g

                          EOF
                securityContext:
                  privilege: true
                  capabilities:
                    add: ["NET_ADMIN"]
                env:
                  - name: TZ
                    value: "{{ pihole_timezone }}"
                  - name: WEBPASSWORD
                    value: "{{ pihole_password }}"
                  - name: SERVERIP
                    value: "{{ master_ip }}"
                  - name: PIHOLE_DNS_1
                    value: "{{ pihole_dns }}"
                  - name: PIHOLE_INTERFACE
                    value: "{{ pihole_interface }}"
                  - name: DNSMASQ_LISTENING
                    value: "{{ pihole_dnsmasq_listening }}"
                # volumeMounts:
                #   - name: pihole-adlists
                #     mountPath: /etc/pihole/adlists.list
                #     subPath: adlists.list
                #   - name: pihole-regex
                #     mountPath: /etc/pihole/regex.list
                #     subPath: regex.list
            
            ports:
            - name: web
              containerPort: 80
            - name : dns
              protocol : UDP
              containerPort: 53
            # volumes:
            #   - name: pihole-adlists
            #     configMap:
            #       name: pihole-adlists
            #   - name: pihole-regex
            #     configMap: 
            #       name: pihole-regex


- name: Expose PiHole Web Interface to Kubernetes Network2
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: pihole-web-service
        namespace: pihole
      spec:
        type: ClusterIP
        selector:
          app: pihole
        ports:
        - protocol: TCP
          port: 80
          targetPort: 80
          name : web

- name: Expose PiHole Web Interface to Kubernetes Network
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: pihole-dns-service
        namespace: pihole
      spec:
        type: LoadBalancer
        externalTrafficPolicy: Local
        selector:
          app: pihole
        ports:
        - protocol: UDP
          port: 53
          targetPort: 53
          name : dns

- name: Create ingress for port 80
  k8s:
    state: present
    definition:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        name: pihole-web-ingress
        namespace: pihole
        annotations:
          kubernetes.io/ingress.class: "traefik"
      spec:
        rules:
        - http:
            paths:
            - path: /
              pathType: Prefix
              backend:
                service:
                  namespace: pihole
                  name: pihole-web-service
                  port:
                    number: 80

